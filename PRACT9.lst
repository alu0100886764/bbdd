SQL> TYPE dato IS VARRAY(20) OF AREA.AR%TYPE;
SP2-0734: unknown command beginning "TYPE dato ..." - rest of line ignored.
SQL> plsql
SP2-0042: unknown command "plsql" - rest of line ignored.
SQL> TYPE dato IS VARRAY(20) OF AREA.AR%TYPE;
SP2-0734: unknown command beginning "TYPE dato ..." - rest of line ignored.
SQL> CREATE PROCEDURE MOSTRAR_NOMBRE_AREAS(cd IN DEPARTAMENTO.CD%TYPE, area OUT dato)
  2  IS
  3  BEGIN
  4  SELECT AR
  5  INTO AREA
  6  FROM DEPARTAMENTO NATURAL JOIN AREA
  7  WHERE CD = cd;
  8  END;
  9  DECLARE
 10  area OUT dato
 11  BEGIN
 12  MOSTRAR_NOMBRE_AREAS(1,area);
 13  FOR i IN 1..area.count LOOP
 14  DBMS_OUTPUT.PUT_LINE(area(i));
 15  END LOOP;
 16  END;
 17  /

Warning: Procedure created with compilation errors.

SQL> CALL MOSTRAR_NOMBRE_AREAS();
CALL MOSTRAR_NOMBRE_AREAS()
     *
ERROR at line 1:
ORA-06575: Package or function MOSTRAR_NOMBRE_AREAS is in an invalid state 


SQL> CALL MOSTRAR_NOMBRE_AREAS(1,2);
CALL MOSTRAR_NOMBRE_AREAS(1,2)
     *
ERROR at line 1:
ORA-06575: Package or function MOSTRAR_NOMBRE_AREAS is in an invalid state 


SQL> TYPE dato IS_VARRAY(20) OF AREA.AR%TYPE;
SP2-0734: unknown command beginning "TYPE dato ..." - rest of line ignored.
SQL> TYPE dato IS VARRAY(20) OF AREA.AR%TYPE;
SP2-0734: unknown command beginning "TYPE dato ..." - rest of line ignored.
SQL> SPOOL OFF
SQL> DECLARE
  2  CURSOR cantidad IS
  3  SELECT D, COUNT(DISTINCT CAR) AS NCAR
  4  FROM DEPARTAMENTO NATURAL JOIN AREA
  5  GROUP BY D
  6  ORDER BY NCAR DESC;
  7  reg cantidad%ROWTYPE;
  8  BEGIN
  9  OPEN cantidad;
 10  LOOP
 11  FETCH cantidad INTO reg;
 12  EXIT WHEN cantidad%NOTFOUND;
 13  IF(%ROWCOUNT=3) THEN
 14  DBMS_OUTPUT.PUT_LINE(reg.D);
 15  EXIT;
 16  END IF;
 17  END LOOP;
 18  CLOSE cantidad;
 19  END;
 20  /
IF(%ROWCOUNT=3) THEN
   *
ERROR at line 13:
ORA-06550: line 13, column 4: 
PLS-00103: Encountered the symbol "%" when expecting one of the following: 
( - + case mod new not null <an identifier> 
<a double-quoted delimited-identifier> <a bind variable> 
continue avg count current exists max min prior sql stddev 
sum variance execute forall merge time timestamp interval 
date <a string literal with character set specification> 
<a number> <a single-quoted SQL string> pipe 
<an alternatively-quoted string literal with character set specification> 
<an alternatively 


SQL> CREATE PROCEDURE TERCER_DEPARTAMENTO_MAYOR
  2  CURSOR cantidad IS
  3  SELECT D, COUNT(DISTINCT CAR) AS NCAR
  4  FROM DEPARTAMENTO NATURAL JOIN AREA
  5  GROUP BY D
  6  ORDER BY NCAR DESC;
  7  reg cantidad%ROWTYPE;
  8  BEGIN
  9  OPEN cantidad;
 10  LOOP
 11  FETCH cantidad INTO reg;
 12  EXIT WHEN cantidad%NOTFOUND;
 13  IF(%ROWCOUNT=3) THEN
 14  DBMS_OUTPUT.PUT_LINE(reg.D);
 15  EXIT;
 16  END IF;
 17  END LOOP;
 18  CLOSE cantidad;
 19  END;
 20  /

Warning: Procedure created with compilation errors.

SQL> CALL TERCER_DEPARTAMENTO_MAYOR()
  2  ;
CALL TERCER_DEPARTAMENTO_MAYOR()
     *
ERROR at line 1:
ORA-06575: Package or function TERCER_DEPARTAMENTO_MAYOR is in an invalid state 


SQL> SHOW ERRORS
Errors for PROCEDURE TERCER_DEPARTAMENTO_MAYOR:

LINE/COL ERROR                                                                  
-------- -----------------------------------------------------------------      
2/1      PLS-00103: Encountered the symbol "CURSOR" when expecting one of       
         the following:                                                         
         ( ; is with default authid as cluster compress order using             
         compiled wrapped external deterministic parallel_enable                
         pipelined result_cache accessible rewrite                              
                                                                                
SQL> SPOOL OFF
